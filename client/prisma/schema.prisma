// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  username  String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  UserAcct  UserAcct[]
}

model UserAcct {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Trivia    Trivia[]
  Message   Message[]
  User      User      @relation(fields: [id], references: [id])
}

model Trivia {
  id         String   @id @default(cuid())
  title      String
  userAcctId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  userAcct UserAcct   @relation(fields: [userAcctId], references: [id])
  Question Question[]
}

model Question {
  id        String   @id @default(cuid())
  triviaId  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  trivia Trivia @relation(fields: [triviaId], references: [id])
}

model Room {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Message   Message[]
}

model Message {
  id         String   @id @default(cuid())
  roomId     String
  userAcctId String
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  room     Room     @relation(fields: [roomId], references: [id])
  userAcct UserAcct @relation(fields: [userAcctId], references: [id])
}
